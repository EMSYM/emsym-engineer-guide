
git workflow使用文档
==================================

从Master创建一个分支，写代码，然后将这个分支合并到Master，这个代码合并要先 **code  review** 和 **test** ,这样才能保证代码的质量。   
   
在图中 
 ``master`` 作为主干，表示代码已发布给客户。  
  
 ``release branch``   是未发布准备发布的代码。   
 
在平时工作中，作为开发人员是对应着 ``develop``  工作、更新


Git Workflow 工作流程--请读懂下图.  

.. image:: _static/workflow.png
   :width: 60%  


- 1st order accuracy (CFL = 0.8)  


command::

   $ git clone http://github.com/sayop/2DEuler.git

If you open the git-cloned folder **CouetteFlow**,   加粗


.. math::
   \frac{\partial \left ( \bar{U} / J \right )}{\partial t} + \frac{\partial \vec{F'}}{\partial \xi} + \frac{\partial \vec{G'}}{\partial \eta} = 0   


for all the `NSFormatters`_ that    链接


formatters:  


    - :ref:`HYDMapObjectToStringByFormatter` 斜体
        - :ref:`HYDMapDateToString`
        - :ref:`HYDMapNumberToString`
        - :ref:`HYDMapUUIDToString`
        - :ref:`HYDMapURLToString`
    - :ref:`HYDMapStringToObjectByFormatter`
        - :ref:`HYDMapStringToDate`
        - :ref:`HYDMapStringToNumber`
        - :ref:`HYDMapStringToUUID`
        - :ref:`HYDMapStringToURL`  

.. _NSFormatters: https://developer.apple.com/library/mac/documentation/cocoa/reference/foundation/classes/NSFormatter_Class/Reference/Reference.html   



.. _DateFormatConstants:   



If ``[error isFatal]`` is ``NO``, but there is a non-nil error, then a
non-fatal error has occurred. This is happens when a fallback parse option has
taken place. A simple example of this is with :ref:`HYDMapOptionally`::

    id<HYDMapper> mapper = HYDMapOptionallyTo(HYDMapStringToURL(HYDRootMapper));

    id invalidURL = @1;

    HYDError *error = nil;
    id resultingObject = [mapper objectFromSourceObject:invalidURL error:&error];
    // error => non-fatal error
    // resultingObject => nil

This example above produces a non-fatal error with a resulting object of nil.
The non-fatal error reports the error that :ref:`HYDMapStringToURL` would.   


Nearly all mappers come with helper functions. These are simply overloaded c
functions that provide a way to construct mappers more succinctly. Since they
are overloaded they generally conform to the following style::

    HYDMapMapperName(...)
    HYDMapMapperName(id<HYDMapper> innerMapper, ...);

The former function is a convenience that converts to the latter function::

    HYDMapMapperName(HYDMapIdentity(), ...);

The :ref:`identity mapper <HYDIdentityMapper>` simply provides direct access to
the source object and provides a KVC-styled key accessor for parent mappers.  

+-----------+----------------+-------------------------------+-----------------------+
|           | CPU time (sec) | Iternation # for convergence  | Max. CFL to be stable |
+-----------+----------------+-------------------------------+-----------------------+
| CASE #1   | 1.78388        | 583                           | 1.2                   |
+-----------+----------------+-------------------------------+-----------------------+
| CASE #2   | 1.93979        | 637                           | 0.8                   |
+-----------+----------------+-------------------------------+-----------------------+
| CASE #3   | 2.74088        | 664                           | 0.75                  |
+-----------+----------------+-------------------------------+-----------------------+




